kind: pipeline
type: docker
name: build

concurrency:
  limit: 1

steps:
- name: build
  image: mcr.microsoft.com/dotnet/sdk:7.0-alpine
  commands:
    - dotnet restore
    - dotnet build
     
- name: qa
  image: mcr.microsoft.com/dotnet/sdk:7.0-alpine
  environment:
    sonarqube_host:
      from_secret: sonarqube_host
    sonarqube_token:
      from_secret: sonarqube_token
    sonarqube_project:
      from_secret: sonarqube_project
  commands:
    - apk add nodejs20
    - export PATH=$PATH:/usr/bin/node 
    - apk add openjdk17
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
    - dotnet tool install --global dotnet-sonarscanner
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet sonarscanner begin /k:"$sonarqube_project" /d:sonar.host.url="$sonarqube_host"  /d:sonar.token="$sonarqube_token"
    - dotnet build
    - dotnet sonarscanner end /d:sonar.token="$sonarqube_token"
  
- name: test 
  image: mcr.microsoft.com/dotnet/sdk:7.0-alpine
  environment:
    ConnectionStrings__WebContext:
      from_secret: ConnectionStrings__WebContext
    ConnectionStrings__Test:
      from_secret: connectionstringtest
    canvas__url:
      from_secret: canvasurl
    canvas__key:
      from_secret: canvaskey
  commands:
    - dotnet test
      
---

kind: pipeline
type: ssh
name: deployment
depends_on:
  - build

server:
  host:
    from_secret: host
  user:
    from_secret: user
  password:
    from_secret: password

clone:
  disable: true

steps:
  - name: move
    commands:
    - cd /home/apper/projects/StudentProgress
    - git checkout main
    - git pull
    - docker-compose up -d --build

trigger:
  branch:
    - main
  event:
    - push