@page "{id:int?}"
@model StudentProgress.Web.Pages.Progress.CreateEditModel
@using StudentProgress.Core.Entities
@using StudentProgress.Core.Extensions
@{
  ViewData["Title"] = "Add Progress";
}
@section Scripts
{
  <script src="~/js/progressCreateEdit.js"></script>
  <script>
    function removeRatingFrom(event) {
      const tableRow = event.parentNode.parentNode;
      const ratings = tableRow.querySelectorAll('input[type="radio"]');
      ratings.forEach(radio => radio.checked = false);
      const commentArea = tableRow.querySelector('textarea');
      commentArea.value = '';
      manuallyResizeTextArea(commentArea);
    }
  </script>
}

<section id="page-nav">
  <a asp-page="/StudentGroups/Index">Groups</a> >
  <a asp-page="/StudentGroups/Details/Index" asp-route-id="@Model.Group.Id">@Model.Group.Name</a> >
  <a asp-page="./Summary" asp-route-studentId="@Model.Student.Id"
     asp-route-groupId="@Model.Group.Id">
    @Model.Student.Name
  </a> >
  <span>@(Model.Progress.Id == null ? "Add" : "Edit") progress</span>
</section>

<h1>@Model.Student.Name</h1>
<div asp-validation-summary="All"></div>
<h2>@(Model.Progress.Id == null ? "New" : "Update") Progress</h2>

<form class="row" method="post" x-data="hotkeyController()" x-init="listenToKeys()">
  <input type="hidden" asp-for="Progress.Id"/>

  <aside id="form-nav" class="col-sm-12 col-md-2 order-md-1">
    <nav id="group-nav" class="navbar navbar-light position-sticky top-0">
      <nav class="nav nav-pills flex-column">
        <a class="nav-link" href="#date">Date</a>
        @if (Model.Milestones.Any())
        {
          <a class="nav-link" href="#milestones">Milestones</a>
        }
        @foreach (var navId in Model.MilestoneNavIds)
        {
          <a class="nav-link" href="#@navId.Value">@navId.Key</a>
        }
        <a class="nav-link" href="#feedback">Feedback</a>
        <a class="nav-link" href="#feeling">Feeling</a>
        <a class="nav-link" href="#save">Done</a>
      </nav>
    </nav>
  </aside>

  <div class="col-md-10">
  
    <section id="date">
      <input type="hidden" asp-for="Progress.StudentId" value="@Model.Student.Id"/>
      <input type="hidden" asp-for="Progress.GroupId" value="@Model.Group.Id"/>
      <div class="form-group mb-3">
        <label asp-for="Progress.Date"></label>
        <div x-data="{ time: new Date().toLocaleTimeString(undefined, { hour12: false }).replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, '$1') }" class="d-flex">
          <input class="form-control me-3" asp-for="Progress.DateDate"/>
          <input x-model="time" class="form-control" asp-for="Progress.DateTime" asp-format="{0:HH:mm}"/>
        </div>
      </div>
    </section>

    <section id="milestones" class="row">
      @if (Model.Milestones.Any())
      {
        <h3>Milestones</h3>


        <table class="table">

          <tbody>
          @foreach (var (milestone, index) in Model.Milestones.WithIndex())
          {
            if (index == 0 || Model.Milestones[index - 1].LearningOutcome != milestone.LearningOutcome)
            {
              <tr>
                <td colspan="4">
                  <h4 id="@Model.MilestoneNavIds.GetValueOrDefault(milestone.LearningOutcome)" class="text-muted">@milestone.LearningOutcome</h4>
                </td>
              </tr>
            }
            <tr>
              <td class="align-middle">
                @milestone.Artefact
                <input type="hidden" name="Progress.Milestones[@index].MilestoneId" value="@milestone.Id"/>
                <input type="hidden" name="Progress.Milestones[@index].Id" value="@Model.Progress.Milestones[index].Id"/>
              </td>
              <td class="align-middle">
                <div class="btn-group btn-group-sm" role="group" aria-label="@milestone.Artefact">
                  @for (int i = 0; i < Enum.GetValues<Rating>().Length; i++)
                  {
                    <input type="radio" class="btn-check"
                           asp-for="Progress.Milestones[index].Rating"
                           id="milestone-@milestone.Id-@i"
                           value="@((Rating) (i + 1))"/>
                    <label class="btn btn-outline-@MilestoneUiHelper.RatingColor((Rating) (i + 1))" for="milestone-@milestone.Id-@i">@(i + 1)</label>
                  }
                </div>
              </td>
              <td class="align-middle">
                <textarea class="form-control" placeholder="Comments" rows="1" asp-for="Progress.Milestones[index].Comment"></textarea>
              </td>
              <td class="align-middle">
                <button type="button" class="btn btn-link btn-sm text-dark" onclick="removeRatingFrom(this)">
                  <svg-inject src="lib/bootstrap-icons/trash.svg"></svg-inject>
                </button>
              </td>
            </tr>
          }
          </tbody>
        </table>
      }
    </section>
    
    <section id="feedback">
      <h3>Feedback</h3>
      <p class="form-group">
        <label asp-for="Progress.Feedback"></label>
        <textarea class="form-control" asp-for="Progress.Feedback"></textarea>
      </p>
    </section>
    
    <section class="row">
      <p x-text="message"></p>
    </section>
    
    <section id="feeling" class="row col-xl-6">
      <p class="form-group">
        <label asp-for="Progress.Feeling"></label>
        <select class="form-control" asp-for="Progress.Feeling"
                asp-items="@Html.GetEnumSelectList<Feeling>()"
                x-ref="feelingSelect">
        </select>
      </p>
    </section>
    
    <p id="save">
      <input class="btn btn-primary" type="submit" value="@(Model.Progress.Id == null ? "Add" : "Update")"/>
    </p>
  </div>
</form>
