@page
@using StudentProgress.Core.Entities
@using StudentProgress.Core.UseCases
@model StudentProgress.Web.Pages.StudentGroups.Details.IndexModel

@{
  ViewData["Title"] = $"{Model.StudentGroup.Name} - Details";
}

@section Styles
{
  <link rel="stylesheet" href="~/css/group.css" asp-append-version="true">
}

@section Scripts
{
  <script src="~/js/studentName.js"></script>
  <script src="~/js/milestoneTableActions.js"></script>
}

<div class="row">
  <aside class="col-sm-12 col-md-2">
    <nav id="group-nav" class="navbar navbar-light position-sticky top-0">
      <nav class="nav nav-pills flex-column">
        <a class="nav-link" href="#group">Group</a>
        <a class="nav-link" href="#students">Students</a>
        <a class="nav-link" href="#milestones">Milestones</a>
      </nav>
    </nav>
  </aside>

  <section id="content" class="col-sm-12 col-md-10">
    <section id="nav">
      <a asp-page="../Index">Groups</a> >
      @Model.StudentGroup.Name (<a asp-page="../Edit" asp-route-id="@Model.StudentGroup.Id">Edit</a>)
    </section>

    <section id="group">
      <h1>@Html.DisplayFor(model => model.StudentGroup.Name)</h1>
      <hr/>

      <dl class="row">
        <dt class="col-sm-2">
          @Html.DisplayNameFor(model => model.StudentGroup.Name)
        </dt>
        <dd class="col-sm-10">
          @Html.DisplayFor(model => model.StudentGroup.Name)
        </dd>
        <dt class="col-sm-2">
          @Html.DisplayNameFor(model => model.StudentGroup.Mnemonic)
        </dt>
        <dd class="col-sm-10 feedback-text">
          @Html.DisplayFor(model => model.StudentGroup.Mnemonic)
        </dd>

        <dt class="col-sm-2">
          @Html.DisplayNameFor(model => model.StudentGroup.CreatedAt)
        </dt>
        <dd class="col-sm-10">
          @Html.DisplayFor(model => model.StudentGroup.CreatedAt)
        </dd>
        <dt class="col-sm-2">
          @Html.DisplayNameFor(model => model.StudentGroup.UpdatedAt)
        </dt>
        <dd class="col-sm-10">
          @Html.DisplayFor(model => model.StudentGroup.UpdatedAt)
        </dd>
      </dl>
    </section>

    <section id="students">
      <div class="d-flex">
        <h2>Students</h2>
        <a class="btn btn-link btn-sm" asp-page="./AddStudent" asp-route-groupId="@Model.StudentGroup.Id">Add new</a>
      </div>

      @if (!Model.StudentGroup.Students.Any())
      {
        <p>There are no students yet</p>
      }
      else
      {
        <table class="table" x-data="initMilestoneTableActionsController()">
          <caption>Table showing the students for this group</caption>
          <thead>
          <tr>
            <th id="student-name">@Html.DisplayNameFor(model => model.StudentGroup.Students.FirstOrDefault().Name)</th>
            <th id="student-timeline">
              <a asp-page="./Index" asp-route-id="@Model.StudentGroup.Id" asp-route-sort="@(Model.IsSortedOnLastFeedback ? null : "last-feedback")">
                Timeline
                @if (Model.IsSortedOnLastFeedback)
                {
                  <svg-inject src="lib/bootstrap-icons/sort-numeric-down-alt.svg"></svg-inject>
                }
              </a>
            </th>
            <th id="student-amount-of-progress">@Html.DisplayNameFor(model => model.StudentGroup.Students.FirstOrDefault().AmountOfProgressItems)</th>
            <th id="student-last-feedforward">@Html.DisplayNameFor(model => model.StudentGroup.Students.FirstOrDefault().LastFeedback)</th>
            <th id="student-actions"></th>
          </tr>
          </thead>
          <tbody>
          @foreach (var student in Model.StudentGroup.Students)
          {
            <tr>
              <td x-data="initStudentNameController()" class="student-name" headers="student-name">
                <input x-ref="nameOriginal" type="hidden" value="@student.Name"/>
                <a x-show="!isEditing" x-ref="nameDisplay" class="me-3" asp-page="/Progress/Summary" asp-route-studentId="@student.Id" asp-route-groupId="@Model.StudentGroup.Id">@Html.DisplayFor(_ => student.Name)</a>
                <form x-show="isEditing" x-ref="form" x-cloak>
                  <input name="id" type="hidden" value="@student.Id"/>
                  <div class="d-inline-flex">
                    <input x-ref="nameInput" name="name" type="text" class="form-control" value="@student.Name" x-on:keydown.enter="updateName" x-on:keydown.escape="cancelEditing">
                    <button x-on:click="updateName" type="submit" class="btn btn-link">
                      <svg-inject src="lib/bootstrap-icons/save.svg"></svg-inject>
                    </button>
                  </div>
                </form>
                <span x-show="!isEditing" x-on:click="startEditing" class="name-edit">
                  <svg-inject src="lib/bootstrap-icons/pen.svg"></svg-inject>
                </span>
              </td>
              <td headers="student-amount-of-progress" class="student-timeline align-middle">
                <partial name="Shared/_ProgressTimeline" model="new ProgressTimeline(Model.StudentGroup.Period, student.ProgressUpdates.Select(u => new ProgressUpdateUI(u.Id, u.Date, u.Feeling, u.StudentId, u.GroupId)))"/>
              </td>
              <td headers="student-amount-of-progress">
                <a asp-page="/Progress/Index" asp-route-studentId="@student.Id" asp-route-groupId="@Model.StudentGroup.Id">
                  @Html.DisplayFor(_ => student.AmountOfProgressItems)
                </a>
              </td>
              <td headers="student-last-feedforward" class="feedback-text">@Html.DisplayFor(_ => student.LastFeedback)</td>
              <td>
                <a class="btn btn-link" asp-page="./RemoveStudent" asp-route-studentId="@student.Id" asp-route-groupId="@Model.StudentGroup.Id" title="Remove student from group">
                  <svg-inject src="lib/bootstrap-icons/person-dash.svg"></svg-inject>
                </a>
              </td>
            </tr>
          }
          </tbody>
        </table>
      }
    </section>

    <section id="milestones">
      <div class="milestones-header d-flex">
        <h2>Milestones</h2>
        <a class="btn btn-link btn-sm" asp-page="./AddMilestone" asp-route-id="@Model.StudentGroup.Id">Add new</a>
      </div>
      @if (!Model.StudentGroup.Milestones.Any())
      {
        <p>There are no milestones yet</p>
      }
      else
      {
        <table class="table" x-data="initMilestoneTableActionsController()">
          <thead>
          <tr>
            <th x-show="isSelecting"></th>
            <th id="milestone-artefact">
              @Html.DisplayNameFor(m => m.StudentGroup.Milestones.FirstOrDefault().Artefact)

              <button x-on:click="startSelecting" x-show="!isSelecting" class="btn btn-link">Edit multiple</button>
              <form x-show="isSelecting" class="ms-3 milestone-form" method="post" asp-page-handler="UpdateMultipleMilestones">
                <div class="d-flex">
                  <input type="hidden" name="groupId" value="@Model.StudentGroup.Id"/>
                  <input x-model="learningOutcomeNew" type="text" name="learningOutcome" class="form-control" placeholder="New learning outcome"/>
                  <template x-for="(id, index) in milestonesSelected">
                    <input type="hidden" x-bind:name="getMilestoneInputNameFor(index)" name="milestoneIds[]" x-model="id"/>
                  </template>
                  <button x-bind:disabled="!milestonesSelected.length || !learningOutcomeNew" class="btn btn-link text-nowrap" type="submit">Change <span x-show="milestonesSelected.length" x-text="milestonesSelected.length"></span></button>
                  <button x-on:click="stopSelecting" x-show="isSelecting" type="button" class="btn btn-link">Cancel</button>
                </div>
              </form>
            </th>
            <th id="milestone-actions"></th>
          </tr>
          </thead>

          <tbody>
          @foreach (var milestoneGrouping in Model.StudentGroup.Milestones.ToLookup(m => m.LearningOutcome))
          {
            <tr>
              <td x-on:click="useLearningOutcomeAsNewName" x-bind:class="{ 'pointer': isSelecting }" x-bind:colspan="isSelecting ? 3 : 2" class="text-muted fw-light" headers="milestone-learning-outcome">
                @milestoneGrouping.Key
              </td>
            </tr>
            @foreach (var milestone in milestoneGrouping.ToList())
            {
              <tr>
                <td x-show="isSelecting">
                  <input x-model="milestonesSelected" type="checkbox" value="@milestone.Id">
                </td>
                <td headers="milestone-artefact" class="ps-4">@milestone.Artefact</td>
                <td headers="milestone-actions">
                  <a asp-page="/milestones/edit" asp-route-id="@milestone.Id" asp-route-groupId="@Model.StudentGroup.Id">Edit</a> |
                  <a asp-page="/milestones/delete" asp-route-id="@milestone.Id" asp-route-groupId="@Model.StudentGroup.Id">Delete</a>
                </td>
              </tr>
            }
          }
          </tbody>
        </table>
      }
    </section>

  </section>
</div>