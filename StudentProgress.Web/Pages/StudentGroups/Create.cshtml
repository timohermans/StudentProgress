@page
@model StudentProgress.Web.Pages.StudentGroups.CreateModel

@{
    ViewData["Title"] = "Create";
}

@section Styles
{
    <link rel="stylesheet" href="~/css/group.css">
}

<div>
    <a asp-page="Index">Groups</a> >
    <span>New</span>
</div>

<h1>Create</h1>

<h4>Group / Semester / Class</h4>
<hr/>
<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input-form-control asp-for="StudentGroup.Name"></input-form-control>
    
    @Html.FormBlock(m => m.StudentGroup.Name)
    <div class="form-floating mb-3">
        <input type="date" placeholder="placeholder" class="form-control" asp-for="StudentGroup.StartDate">
        <label asp-for="StudentGroup.StartDate"></label>
    </div>
    @Html.FormBlock(m => m.StudentGroup.Mnemonic, inputModifier: _ => _.TagName("textarea"))
    
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary"/>
    </div>
</form>


@section Scripts {
    @*@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }*@

    <script>
        function deleteMilestone(event) {
            const milestoneItem = event.parentNode;
            const milestoneList = milestoneItem.parentNode;
            
            if (milestoneList.children.length === 1) return;
            
            milestoneList.removeChild(milestoneItem);
        }
        
        function addMilestone() {
            const milestonesList = document.getElementById("milestones-list");
            const milestoneElement = milestonesList.children[0];
            const newMilestoneElement = milestoneElement.cloneNode(true);
            milestonesList.appendChild(newMilestoneElement);
            newMilestoneElement.focus(); 
        }
    </script>

}